{
  "name": "pride",
  "id": "2a8A8mpierjEvTFHZ",
  "sources": {
    "main": "// Pride pattern\n// based on Pride2015 by Mark Kriegsman: https://gist.github.com/kriegsman/964de772d64c502760e5\n// modified by Ben Hencke & Jason Coon to run on Pixelblaze\n\nvar speed = 1;\nvar s = (speed * 2) + 0.001;\n\nexport function sliderSpeed(v) {\n  speed = v;\n  s = (speed * 2) + 0.001;\n}\n\nexport function showNumberSpeed() {\n  return speed;\n}\n\n// beatsin8(BPM, uint8_t low, uint8_t high) returns an 8-bit value that\n// rises and falls in a sine wave, 'BPM' times per minute,\n// between the values of 'low' and 'high'.\nfunction beatsin8(bpm, low, high) {\n  var b = bpm * s;\n  return wave(time(0.91552734375 / b)) * (high - low) + low;\n}\n\nfunction beatsin88(bpm, low, high) {\n  return beatsin8(bpm >> 8, low, high);\n}\n\nvar sPseudotime = 0; // was uint16_t modified to be a value between 0 and 1\n// var sLastMillis = 0; // uint16_t\nexport var sHue16 = 0; // was uint16_t seems to work fine as-is\nexport var ledarray = array(pixelCount*3);\n\nfunction pride(deltams, useFibonacciOrder) {\n  var brightdepth = beatsin88(341, 96, 224); // uint8_t\n  var brightnessthetainc16 = beatsin88( 203, (25 * 256) * s, (40 * 256) * s); //uint16_t\n  var msmultiplier = beatsin88(147, 23 * s, 60 * s); //uint8_t\n\n  var hue16 = sHue16; // gHue * 256; // uint16_t\n  var hueinc16 = beatsin88(113, 1, 128 * 3); // varies a bit more\n\n  sPseudotime += (deltams * msmultiplier) >> 16;\n  sHue16 += deltams * beatsin88(400, 5 * s, 9 * s);\n  var brightnesstheta16 = sPseudotime; // uint16_t\n\n  for ( var i = 0 ; i < pixelCount; i++) { // uint16_t\n    hue16 += hueinc16;\n    var hue8 = hue16 / 256; // uint8_t\n    //this is doing a triangle\n    var h16_128 = hue16 >> 7; // uint16_t\n    if ( h16_128 & 0x100) {\n      hue8 = 255 - (h16_128 >> 1);\n    } else {\n      hue8 = h16_128 >> 1;\n    }\n\n    brightnesstheta16 += brightnessthetainc16 >> 16;\n    brightnesstheta16 = mod(brightnesstheta16 + (brightnessthetainc16 >> 16), 1)\n    var b16 = wave(brightnesstheta16); // uint16_t\n\n    // var bri16 = (uint32_t)((uint32_t)b16 * (uint32_t)b16) / 65536; // uint16_t\n    var bri16 = b16 * b16\n    // var bri8 = (uint32_t)(((uint32_t)bri16) * brightdepth) / 65536; // uint8_t\n    var bri8 = bri16 * (brightdepth >> 8)\n    bri8 += (1 - (brightdepth >> 8));\n\n    var index = hue8; // uint8_t\n    // index = triwave8(index);\n    index = index / 256 * 240;\n\n    var pixelnumber = useFibonacciOrder ? fibonacciToPhysical[i] : i; // uint16_t\n\n    // nblend(ledarray[pixelnumber], newcolor, 8);\n    // TODO: blending in RGB. For now use the 3 byte pixel for hue and value\n    ledarray[pixelnumber * 3] = hue8 / 128;\n    ledarray[pixelnumber * 3 + 2] = bri8;\n  }\n}\n\nexport function beforeRender(delta) {\n  pride(delta, 1)\n}\n\nexport function render(index) {\n  v = ledarray[index*3+2]\n  hsv(ledarray[index*3], 1, v*v)\n}\n\nvar fibonacciToPhysical = [ 0, 98, 195, 49, 146, 243, 74, 171, 24, 122, 219, 50, 147, 244, 97, 194, 25, 123, 220, 73, 170, 1, 99, 196, 48, 145, 242, 75, 172, 23, 121, 218, 51, 148, 245, 96, 193, 26, 124, 221, 72, 169, 2, 100, 197, 47, 144, 241, 76, 173, 22, 120, 217, 52, 149, 246, 95, 192, 27, 125, 222, 71, 168, 3, 101, 198, 46, 143, 240, 77, 174, 21, 119, 216, 53, 150, 247, 94, 191, 28, 126, 223, 70, 167, 4, 102, 199, 45, 142, 239, 78, 175, 20, 118, 215, 54, 151, 248, 93, 190, 29, 127, 224, 69, 166, 5, 103, 200, 44, 141, 238, 79, 176, 19, 117, 214, 55, 152, 249, 92, 189, 30, 128, 225, 68, 165, 6, 104, 201, 43, 140, 237, 80, 177, 18, 116, 213, 56, 153, 250, 91, 188, 31, 129, 226, 67, 164, 7, 105, 202, 42, 139, 236, 81, 178, 17, 115, 212, 57, 154, 251, 90, 187, 32, 130, 227, 66, 163, 8, 106, 203, 41, 138, 235, 82, 179, 16, 114, 211, 58, 155, 252, 89, 186, 33, 131, 228, 65, 162, 9, 107, 204, 40, 137, 234, 83, 180, 15, 113, 210, 59, 156, 253, 88, 185, 34, 132, 229, 64, 161, 10, 108, 205, 39, 136, 233, 84, 181, 14, 112, 209, 60, 157, 254, 87, 184, 35, 133, 230, 63, 160, 11, 109, 206, 38, 135, 232, 85, 182, 13, 111, 208, 61, 158, 255, 86, 183, 36, 134, 231, 62, 159, 12, 110, 207, 37 ]\n"
  },
  "preview": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCACWAGQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDkPEf/ACF7X/cvf/RgrR137kf+/b/zrO8Sf8he2/3L3/0YK0dd+5F/vW/8xXfH/dl6L/06i8T/AA6v/Xxf+lls/wDHvB/29f8AtSpdE/5AsX/XOz/9CaoT/wAe1v8AW6/9qVNof/IFi/652f8A6E1efiP4lD0h/wCnZGFf4q/+OP8A6WjG03/j2H/X3N/6GKk0L/kKXP8A1zt//QqZpv8Ax7D/AK+5f/QxTtC/5Clx/wBc7f8A9Crsj/u0P6/5es3qf7s/+vn/ALey7qX/ACFrr/rle/zFHiP/AJCzf9flp/Ok1L/kL3f/AFzvP5il8Sf8hdv+vy0/nXDS+Ct/hf8A6eic0/ipf45/+lIl1r/kDT/9etz/AOjjVS6/48Py/wDRdW9a/wCQLN/163P/AKONVLr/AJB34j/0XWuD+KfpL/04jpwP8aH/AHG/9LE8I/8AIIn/AOvaf+daXh//AJDUn/X+v/og1m+Ef+QRP/16z/zrS8Pf8ht/+v8AX/0Qaxzbr/3F/OJiuv8Agqf+lHK6p1tv+uX/ALM1FLqnW2/65f8AszUV9dDef+Kf/pTPnsR/E+78kTeJP+Qvb/7l5/6MFaWvfdi/3rb+YrN8S/8AIXt/9y9/9GCtLX/uxfW2/mK8SP8Auy9F/wCnUfT4n+HV/wCvi/8ASyy3/Hrb/W6/9qVNof8AyBI/+udn/wChNUJ/49Lb63X/ALUqbQ/+QHH/ANc7P/0Jq8/EfxKHpD/07Iwr/FX/AMcf/S0Y+mf6gf8AX3N/6GKdoP8AyFbj/ct//Qqbpn+oH/X3N/6GKdoP/IVn/wBy3/8AQq7I/wC7Q/r/AJes3q/7s/8Ar5/7ey5qf/IXu/8ArnefzFL4k/5C7f8AX5afzpNT/wCQvd/9c7z+YpfEv/IYb/r8tK4aXwVv8L/9PROWfxUv8c//AEpEut/8gSX/AK9rn/0caqXX/INP1H/ouret/wDIEl/69rn/ANHGql1/yDD9R/6LrXB/FP0l/wCnEdWB/jw/7jf+lieEP+QRcf8AXrP/ADrS8O/8hx/+v9f/AEQazfCH/IIuP+vWf+daXhz/AJDjf9f6/wDog1jm3X/uL+cTFdf8FT/0pnK6p1tv+uX/ALM1FGqdbb/rl/7M1FfXQ3n/AIp/+lM+fxHx/d+RP4l/5C8H+5e/+jBWlr/SH6238xWb4m/5DEP+5ef+jBWl4g6Q/W2/mK8OP+7L0X/p1H02K/h1f+vi/wDSyyf+PO2+t1/7UqbQ/wDkBp/1zs//AEJqhb/jytvrdf8AtSptE/5AS/8AXOz/APQmrgxH8Sh6Q/8AT0jCv8Vf/HD/ANOIx9L/ANSP+vub/wBDFO0D/kKzf7lv/wCh03S/9SP+vqb/ANDFLoH/ACFZv9y3/wDQ67I/7tD+v+XrN6v+7P8A6+f+3su6n/yF7z/cvP5il8Tf8hg/9flpSap/yF7v/rne/wAxS+J/+Qyf+vu0rhpfBW/wv/09E5p/FS/xz/8ASkS63/yA5P8Ar2uf/Rxqpdf8gs/Uf+i6t63/AMgN/wDr2uv/AEcaqXX/ACCj/vD/ANF1rg/in6S/9OI6cD/Hh/3G/wDSxPB//IIuf+vSf+daXhz/AJDrf9f6/wDog1neD/8AkEXP/XpP/OtHw3/yHj/1/r/6INY5ts/+4v5xMV1/wVPzZymqdbb/AK5f+zNRRqnW2/65f+zNRX10N5/4pf8ApTPn8R8f3fkWPE3/ACGIf9y8/wDRgrS8Q/8ALH6238xWZ4n/AOQxF/uXn/owVp+IesP/AG7fzFeHD/dl/hX/AKdR9Niv4dX/AK+L/wBLLDf8eNt9br/2ep9D/wCQEv8A1zsv/QmqBv8Ajwtfrdf+z1Pof/IBH/XOz/8AQmrgxHx0P+3P/TsjCv8AFX/xw/8ATiMfSv8AVD/r6m/9DFL4f/5Csv8AuW//AKHSaV/qx/19Tf8AoYpfD/8AyFZf9y3/APQq7F/u0P6/5es3q/7s/wDr5/7ey7qv/IXu/wDrne/zFL4n/wCQy3/X3Z/0pNW/5C93/uXv8xS+Kf8AkMt/1+Wf9K4aXwVv8L/9PROafx0v8c//AEpE2t/8gJv+va6/9HGqd1/yCW/3h/6Lq5rf/ICb/r2uv/Rxqndf8ghv94f+i61we8/SX/pxHTgf48P+43/pYeDv+QRdf9ek/wDOtHw1/wAh4/8AX+v/AKINZ3g7/kEXX/XpcfzrR8Nf8h//ALf1/wDRBrHNtn/3F/OJit3/AIKn5s5TU+tt/wBcv/Zmoo1Prbf9cv8A2ZqK+vp7z/xS/wDSmeBiPj+78ix4n/5DEf8AuXv/AKGK0vEXWH/t2/mKzfFH/IYT/dvP/QxWl4i6w/S2/mK8KH+7R/wr/wBOo+lxX8Or/wBfF/6WWG/5B9r9br/2eptD/wCQCP8ArnZfzaoW/wCQdafW6/8AZ6m0P/kAf9s7L+bVwYj46H/bv/p6Rz1/ir/44f8ApxGRpX3F/wCvmb/0IUeHv+QtJ/u2/wD6HRpX3F/6+Zv/AEIUeHv+QrJ/u2//AKHXYv8Adof1/wAvWdFX/dn/ANfP/b2XtX/5C93/ALl7/MUvin/kNN/192f9Kbq//IXvP9y9/mKd4q/5DTf9fdn/AErho/BW/wAL/wDT0Tmn8dL/ABz/APSkS63/AMgE/wDXtdf+jjVS6/5A7/7w/wDRdW9b/wCQD/27XX/o41Uu/wDkDP8A74/9F1tg95+kv/TiOnA/x4f9xv8A0sPB3/IJuv8ArzuP51peGf8AkYP+39f/AEQazfB3/IJu/wDrzuP51o+Gf+RgH/X+v/og1hm20v8AuL+cTFfa/wAFT82cpqfW2/65f+zNRSamebb/AK5f+zNRX19Pef8Ail/6UzwMR8f3fkWfFH/IYT/dvP8A0MVpeIvvQfS2/mKzfFP/ACGF/wB29/8AQxWn4i+/B9Lb+Yrwof7tH/Cv/TqPpcV/Dq/9fF/6WTt/yDbT/euv/Z6m0T/kAf8AbOy/m1Qt/wAg2z/3rr/2eptE/wCRfP8A1zsv5tXBiPjof9u/+nZHPX+Kv/18h/6cRkaT91f+vmb/ANCo8Pf8hV/923/9Do0nov8A18zf+hUeHf8AkKv/ALtv/wCh12L/AHan/X/L1nRV/wB2f/Xz/wBvZe1f/kL3n+5e/wDoQpfFf/Iab/r7s/6Umsf8he9/3L3/ANCFHiz/AJDZ/wCvuz/pXDR+Ct/hf/p6JzT+Ol/jn/6UibW/+QD/ANu11/6ONU7r/kCv/vj/ANF1c1v/AJAA/wCva6/9HGqd3/yBJP8AfH/outcHvL0l/wCnEdOB/jw/7jf+li+Dv+QTef8AXncfzrR8Mf8AIwr/ANf6/wDois7wb/yCbz/ryuP51o+GP+RiX/r/AF/9EVjm20v+4v5xMesv8FT82clqf/Lt/wBcv/Zmoo1P/l2/65f+zNRX19Pef+KX/pTPAxHx/d+Ra8U/8hgf7t7/AOhitPxH9+D6W38xWX4p/wCQyP8Advf/AEMVqeI/9Zb/AO7a/wAxXgw/3aP+Ff8Ap1H0uK+Cr/18X/pZM3/IMs/967/9nqbRP+RfP/XOy/m1Qt/yC7L/AHrv/wBnqbRP+RfP/XOy/m1cOI+Oh/27/wCnpHPX+Kv/ANfIf+nEZOkfw/8AXzN/6FR4d/5CzfS3/wDQ6TSP4f8Ar5m/9Co8Of8AIWb6W/8A6HXYv92p/wBf8vWdFX/dn/18/wDb2X9Y/wCQve/7t7/6EKPFv/IbP/X3Zf0pNZ/5C97/ALt7/wChCneLf+Q43/X3Zf0rho/BW/wv/wBOxOafx0v8c/8A0pEuuf8AIAX/AK9rr/0cap3f/IDk/wCug/8ARdXNc/5F9f8Ar2uv/Rxqnd/8gKT/AK6D/wBF1rg95f4Zf+nEdOA/jw/7jf8ApYvg3/kE3n/XlcfzrR8Mf8jEv/X+v/ois7wb/wAgm8/68rj+daPhf/kY0/6/1/8ARFY5ttL/ALi/nEw6y/wVPzZyWpf8u3/XL/2ZqKNS/wCXb/rl/wCzNRX19PeX+KX/AKUzwcR8f3fkWfFX/IZH+7e/+hitTxJ/rLf/AHbX+YrL8Vf8hn/gN7/6GK1PEv8ArLf/AHLX+YrwYf7tH/Cv/TqPpcV8FX/r4v8A0smb/kFWX+9d/wDs9TaJ/wAi83/XOy/m1Qt/yCrL/eu//Z6l0T/kXm/652X82rhxHx0P+3f/AE7I58R8Vf8A6+Q/9OIydI6r/wBfM3/oVHhz/kLH6W//AKHRpH3k/wCvmb/0Kjw5/wAhb8Lf/wBDrsX+7U/6/wCXrOir/uz/AOvn/t7L2s/8he9/3b3/ANCFO8Xf8hxv+vuy/pTda/5C97/u3v8A6EKd4u/5Drf9fdl/SuGj8Fb/AAv/ANOxOafx0v8AHP8ANEuuf8i+n/Xtdf8Ao41Tu/8AkAy/9dB/6Lq5rn/IvR/9e11/6ONU7v8A5AEv/XUf+i61wm8vSX/pxHRgP48P+43/AKWO8G/8gm9/68bj+daHhb/kY0/6/wBf/RFZ/g3/AJBN7/143H860PC3/IyR/wDX+v8A6IrHNtpf9xfziY9Zf4Kn5s5LUv8Al2/65f8AszUUaj/y7f8AXL/2ZqK+vp7y/wAUv/SmeDiP4j+X5FnxX/yGT/u3v/oYrU8S/wCtt/8Actf5isvxX/yGT/u3v/oYrU8S/wCttv8Actf5ivAh/u0f8K/9Oo+lxXwVf8a/9LJm/wCQTY/713/7PUui/wDIvN/1zsv5tULHOj2H+9d/+z1Lop/4p5v+udl/Nq4sR8dD/t3/ANOyObEb1/8Ar5D/ANOIytH++n/XzP8Azo8N/wDIW/C3/wDQ6TSP9ZH/ANfM/wDM0vhv/kLD6W//AKHXav8Adqfp/wC5mdNb/dn/ANfP/b2Xta/5C99/u3v/AKEKd4v/AOQ83/X3Zf0put/8he+/3b3/ANCFO8Xf8h5v+vqy/kK4KPwVf8L/APTsTnl8dH/HP/0pEmuf8i9H/wBe11/6ONVLz/kX5f8ArqP/AEXVzXP+Rei/69rv/wBHGqd5/wAi9N/11H/outcHvL0l/wCnEb4D+PD/ALjf+ljvBn/IJvv+vG4/nWj4W/5GSP8A6/1/9EVneDP+QTff9eNx/OtDwr/yMsX/AF/r/wCiKwzbaX/cX84mPWX+Cp+bOR1I/wDHt/1y/wDZmoo1Lpa/9cv/AGZqK+xp/a/xS/8ASmeFiPjfy/IteK/+Qy3+7e/+hitTxN/rrb/rna/zFFFfPw/3aP8AhX/p1H0mK+Cp/jX/AKWSn/kDWH+9d/8As9S6L/yLzf7ll/7PRRXFiPjof9u/+nZHLid63/XyH/pyJk6T/rY/+vmf+Zo8Nf8AIWH/AG7/APodFFdq/wB2p+n/ALmZ1Vv92f8A18/9vZe1v/kL33+7e/8AoQp/i7/kPt/19WX8hRRXBR+Cr/hf/p2Jzy+Oj/jn/wClRJNc/wCRdi/69rv/ANHGqd5/yLs3/XUf+i6KK1wm8vSX/pxG+A/jw9a3/pY7wZ/yCr//AK8Lj+daPhX/AJGWL/r/AF/9EUUVhm20v+4v5xMesv8ABU/NnI6l0tf+uX/szUUUV9jT+1/il/6UzwsR8b+X5H//2Q=="
}